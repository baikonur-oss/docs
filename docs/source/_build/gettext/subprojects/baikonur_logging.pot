# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2020, The Baikonur OSS Project
# This file is distributed under the same license as the Baikonur package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Baikonur \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-16 18:55+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../subprojects/baikonur_logging.rst:4
#: 78454b65bbf24ab3a6a2fae135254fc1
msgid "Baikonur Logging with Amazon Kinesis and AWS Lambda"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:7
#: e5b7036783404a59a3b0956b500ca58a
msgid "Prerequisites"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:10
#: bbdd00a3f7d641d5b9953c7e2d75c2fe
msgid "Why Kinesis?"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:12
#: d4b578b5138148e2bee22eb0188fc875
msgid "Kinesis Data Streams is a high-throughput, low latency, fully managed service for working with streaming data. A single shard provides `1 MB/s read and 2 MB/s write capacity <kinesis_quotas_>`_. Data put to a Kinesis Data Stream is saved for a period specified in the data retention period parameter. Thus, for capacity planning, it is enough to know peak data throughput."
msgstr ""

#: ../../subprojects/baikonur_logging.rst:18
#: 56aa16613a1847bbb0190831839c09b9
msgid "Kinesis Data Streams do not have auto-scaling capabilities. You can have your Kinesis Data Stream shards scale automatically by using `amazon-kinesis-scaling-utils`_."
msgstr ""

#: ../../subprojects/baikonur_logging.rst:22
#: f884afb55f544dab934acab36a722fdd
msgid "Why Kinesis with Lambda?"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:24
#: 2101c3e06a064a3087217ee1a9dcb4ce
msgid "Using Lambda functions to process data on Kinesis Streams (with event source mapping) reduces the amount of code and resources you have to manage:"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:27
#: 61c60f71626e4eb29fa2a387033246db
msgid "With Lambda, you do not have to manage servers, OS, etc."
msgstr ""

#: ../../subprojects/baikonur_logging.rst:28
#: f05b90959d714c3196f5c2a882886888
msgid "No need to write the logic for reading data from Kinesis Data Stream. Data batches are passed to Lambda functions on execution via ``event`` object."
msgstr ""

#: ../../subprojects/baikonur_logging.rst:31
#: 1f98f7d20a4346edb8bd2381b83334ca
msgid "Event source mapping manages processed data position on Kinesis Data Stream for you. It keeps track of until what position on each shard data is already successfully processed. The position is only updated if Lambda finishes without errors."
msgstr ""

#: ../../subprojects/baikonur_logging.rst:35
#: 1fe6f3b6cf8f4f0db41975be9729cfc6
msgid "If a Lambda function mapped to a Kinesis Data Stream finishes with an error, it is executed again with the same batch until execution succeeds or data expires. Records are removed from Kinesis Data Stream only when the data retention period for those records expires."
msgstr ""

#: ../../subprojects/baikonur_logging.rst:39
#: a492776c674441a89244550d24365d69
msgid "Thus, you do not have to write retry logic in Lambda. Although, it may be a good idea to save data that is failing after n retries to a queue (or S3) and return without errors so that the data processing pipeline does not stop."
msgstr ""

#: ../../subprojects/baikonur_logging.rst:44
#: ca59ce676f6b4189894c76eed993789c
msgid "Why use Kinesis and Lambda for logging?"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:46
#: 5e2e06c2e8a5454dbc79884a46e0bc9f
msgid "Kinesis and Lambda combination can replace self-managed log clusters with managed services while retaining control of log procession."
msgstr ""

#: ../../subprojects/baikonur_logging.rst:49
#: 3f419de404514c819d932dca6661acb3
msgid "By using Kinesis with Lambda, we can create a modular, extendable, scalable logging architecture. Log transfer reliability may improve as well: data written to a Kinesis stream successfully will not get lost."
msgstr ""

#: ../../subprojects/baikonur_logging.rst:53
#: ae57ec3cd4884ff6b489161a0960eff5
msgid "Common Schema requirements"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:55
#: 60d114f129364eec8994833def0b13eb
msgid "“Baikonur Logging architecture\" is any architecture using Kinesis Data Streams in conjunction with one or more of the following Baikonur Logging Lambda modules:"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:58
#: 626495d630384989ad96d83a3bfa09db
msgid "terraform-aws-lambda-kinesis-forward_"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:59
#: ff7dc48e56e74f4a9ceeeb0d545c5dcb
msgid "terraform-aws-lambda-kinesis-to-es_"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:60
#: c7f159acfdc34d258b6f12b479e67b19
msgid "terraform-aws-lambda-kinesis-to-s3_"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:61
#: ea9db35cb92345cf9a7fead553b9382e
msgid "terraform-aws-lambda-kinesis-to-fluent_"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:63
#: bde889c957754d7fb71fe5babd989121
msgid "These modules have the following Common Schema requirements:"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:65
#: 0852ecc58c9f4e25a722211a1087f8a9
msgid "All data must be JSON. The root element type must be an object."
msgstr ""

#: ../../subprojects/baikonur_logging.rst:66
#: 418a5ae133874273aed0ba10d9ed7447
msgid "All data must include the following keys:"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:68
#: 223d3c402df54d35bdba3f559d73e423
msgid "Data type identifier. (default key name: ``log_type``)"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:69
#: 2bb72c44b31a4a1793fda047ffa9a8db
msgid "Any unique identifier, e.g. ``uuid.uuid4()`` (default key name: ``log_id``)"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:70
#: 30f836da514b45ce8112301d33aa2f90
msgid "Any timestamp supported by dateutil. (default key name: ``time``)"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:73
#: 39e8b7e92344465fb66ec6443eb5d753
msgid "All key names are customizable."
msgstr ""

#: ../../subprojects/baikonur_logging.rst:75
#: 1b24674e9cab47beaadca9a9333d5c25
msgid "Common Schema requirements allow us for:"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:77
#: 1b80c73783c64c339d02b93105523471
msgid "Easier parsing"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:78
#: a0089370ebc24895af0c5e1eee6cf1ab
msgid "Better interoperability between different Lambda modules."
msgstr ""

#: ../../subprojects/baikonur_logging.rst:80
#: b7bb7ce82db147978728ddca09f61677
msgid "You can attach different modules to the same Kinesis Data Stream."
msgstr ""

#: ../../subprojects/baikonur_logging.rst:82
#: eaabaa37a758449f924a541413f60708
msgid "Ability to create behavior based on keys that are part of Common Schema requirements:"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:84
#: 1f76448d2fc34e70af8ab1ff76ba6229
msgid "One of the most important features is the ability to filter logs based on data type field value."
msgstr ""

#: ../../subprojects/baikonur_logging.rst:85
#: 862d080a2ec84200a974d33e8edc56b5
msgid "terraform-aws-lambda-kinesis-to-s3_ requires log_id to ensure filename uniqueness and time key to separate logs by date."
msgstr ""

#: ../../subprojects/baikonur_logging.rst:87
#: 4e1a5544bde94b59aeaff5105e4a1932
msgid "terraform-aws-lambda-kinesis-to-es_ requires time key to create daily indices in Elasticsearch (e.g. index-20200314)."
msgstr ""

#: ../../subprojects/baikonur_logging.rst:91
#: e90ba4aac6af4bbc85750c4ebbbdcfdc
msgid "As long as data meets Common Schema requirements, architectures and modules described in this documentation are applicable to any data transfer that needs to be fast and reliable, for example, inter-microservice communication."
msgstr ""

#: ../../subprojects/baikonur_logging.rst:95
#: a7a655e5f5a3467c9fabf91b51a0c62e
msgid "Architecture examples"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:98
#: e7317ac79a2d46adbf77157029b87708
msgid "One stream - one destination"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:100
#: 32332b7bea9b44dc848586ed2d58c0a2
msgid "Create a Kinesis Data Stream for each destination. For example, if we want to save all log data to S3 and only some to Elasticsearch, create two streams, deploy terraform-aws-lambda-kinesis-to-s3_ and terraform-aws-lambda-kinesis-to-es_ modules and map them to the respective streams::"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:112
#: 41399f1eb66e44b28fa4f99353886db4
msgid "If you want to save logs to both S3 and Elasticsearch, write data to both streams."
msgstr ""

#: ../../subprojects/baikonur_logging.rst:115
#: db1c7a9a2d6d4740952ed149f0434742
msgid "One stream - multiple destinations"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:117
#: 6d7eb61199c24d7ab0dea5de097ec828
msgid "In the example above, we have to write logs we want to save to Elasticsearch to both streams. We can further improve this by adding terraform-aws-lambda-kinesis-to-s3_ to stream for Elasticsearch as well::"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:128
#: 6e0db550c80248ffaaecc29e5e9061be
msgid "Now we write each log event at most once."
msgstr ""

#: ../../subprojects/baikonur_logging.rst:133
#: 7c2cb27f1ff14f049d263271adba72ae
msgid "Kinesis routing pattern"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:135
#: fe81a09d921a4830b94926afeb6086c6
msgid "Write data to a single Kinesis stream (a “router”). Create multiple output streams, each for a destination. We can use forwarder modules (terraform-aws-lambda-kinesis-forward_) with whitelists to create an architecture similar to the `Publish-subscribe pattern <https://en.wikipedia.org/wiki/Publish–subscribe_pattern>`_, where a topic is a value in the type field, and each output stream represents a subscription group::"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:149
#: fd92ffd6a3f845c5a8e9d1951a57e14e
msgid "This pattern may also be useful for inter-microservice communication."
msgstr ""

#: ../../subprojects/baikonur_logging.rst:151
#: c29c3e6584284cedb0df641ce86fec2a
msgid "Each of output streams may have their own Lambda modules or subscribers::"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:164
#: 62395600597b4b5cbfd1a3f0bf6eb819
msgid "Kinesis routing pattern with CloudWatch Logs subscription filters"
msgstr ""

#: ../../subprojects/baikonur_logging.rst:166
#: 66240234b42e452abd08da0ff07d4022
msgid "In addition to `Kinesis Routing pattern <kinesis_routing_pattern_>`_, use CloudWatch Logs subscription filters to write data to the “router” stream. Doing so will free you from having to write PutRecord/PutRecords logic in your application if you already output logs to CloudWatch. For instance, if you are using awslogs logging driver in ECS, using subscription filter may look like this::"
msgstr ""
